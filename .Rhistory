colNamesVector <- c(1,2, colNamesVector)
targetVars <- allSemiRawData[, colNamesVector]
head(targetVars)
head(targetVars)[1:10]
dim(targetVars)
targetVars <- allSemiRawData[, colNamesVector]
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityID$)", colNamesVector)
colNamesVector <- colnames(allSemiRawData)
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityID$)", colNamesVector)
targetVars <- allSemiRawData[, colNamesVector]
head(targetVars)[1:10]
dim(targetVars)
head(allSemiRawData, 10)[1:20]
allSubjectsActivitiesData[1:25,]
allSubjectsActivitiesData <- allSubjectsActivitiesData[-2,]
allSubjectsActivitiesData[1:10]
allSubjectsActivitiesData <- cbind(allSubjects, allActivities)
allSubjectsActivitiesData <- allSubjectsActivitiesData[-2,]
allSubjectsActivitiesData[1:10]
allSubjectsActivitiesData[,1:10]
allSubjectsActivitiesData
head(allSubjectsActivitiesData)
head(allSemiRawData, 10)[1:20]
str(allSemiRawData)
any(is.na(allSemiRawData)) # no missing data in this data.frame
names(allSemiRawData$allSubjects) <- "subjectID"
head(allSemiRawData)
head(allSemiRawData)[,1:5]
names(allSemiRawData([,1]) <- "subjectID"
names(allSemiRawData)[,1] <- "subjectID"
names(allSemiRawData$allSubjects <- "subjectID"
head(allSemiRawData)[,1:5]
names(allSemiRawData$allSubjects) <- "subjectID"
head(allSemiRawData)[,1:5]
names(allSemiRawData)[,1] <- "subjectID"
names(allSemiRawData)[1] <- "subjectID"
head(allSemiRawData)[,1:5]
any(is.na(allSemiRawData)) # no missing data in this data.frame
colNamesVector <- colnames(allSemiRawData)
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityID$)", colNamesVector)
str(colNamesVector)
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
str(colNamesVector)
head(colNamesVector)
colNamesVector <- colnames(allSemiRawData)
colNamesVector
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
colNamesVector
colNamesVector <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
colNamesVector
colNamesVector2 <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
colNamesVector <- colnames(allSemiRawData)
colNamesVector
colNamesVector2 <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
colNamesVector2
targetVars <- allSemiRawData[, colNamesVector2]
head(targetVars)[1:10]
dim(targetVars)
tidyTargetVars <- targetVars[, !duplicated(colnames(targetVars))]
dim(tidyTargetVars) # no duplicates at this point
library(dplyr)
preTidy <- group_by(tidyTargetVars, subjectID, activityName)
preTidy
tidyData <- summarise_each(preTidy, funs(mean))
head(tidyData)
glimpse(tidyData)
View(tidyData)
tidyData <- summarise_each(preTidy, funs(mean), na.rm = TRUE)
head(tidyData)
glimpse(tidyData)
head(tidyData)
preTidy <- tidyTargetVars %>% group_by(subjectID, activityName)
preTidy
tidyData <- summarise_each(preTidy, funs(mean), na.rm = TRUE)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(preTidy, funs(mean), na.rm = TRUE)
head(tidyData)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(preTidy, funs(mean), na.rm = TRUE)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(tidyTargetVars, funs(mean), na.rm = TRUE)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), na.rm = TRUE)
head(tidyData)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), na.rm = TRUE)
head(tidyData)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean)
head(tidyData)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean))
head(tidyData)
tidydata <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean))
head(tidyData)
tidygrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidydata <_ summarise_each(funs(mean))
head(tidyData)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <_ summarise_each(funs(mean))
head(tidyData)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <- summarise_each(funs(mean))
head(tidyData)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <- summarise_each(tidygrouped, funs(mean))
head(tidyData)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <- summarise_each(tidygrouped, funs(mean))
head(tidyData)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <- summarise_each(tidyGrouped, funs(mean))
head(tidyData)
subjectID
targetVars$subjectID
unique(targetVars$subjectID)
unique(targetVars$activityName)
head(targetVars$activityName)
head(targetVars$activityName, 100)
head(tidyData)
head(tidyData, 100)
tidyGrouped <- group_by(tidyTargetVars, subjectID, activityName)
tidyData <- summarise_each(tidyGrouped, funs(mean))
head(tidyData, 100)
head(tidyGrouped)
head(tidyGrouped, 50)
str(tidyGrouped)
tidyData <- summarise_each(tidyGrouped, funs(mean))
str(tidyData)
tail(tidyData)
dim(tidyData)
tidyData
View(tidyData)
tidyData <- summarise(tidyGrouped, funs(mean), subjectID, activityName)
tidyData <- summarise(tidyTargetVars, funs(mean), subjectID, activityName)
tidy <- tidyTargetVars %>%
group_by(subjectID) %>%
summarise_each(funs(mean))
tidy
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean))
tidy
tidy <- tidyTargetVars %>%
group_by(subjectID) %>%
group_by(activityName) %>%
summarise_each(funs(mean))
tidy
tidy <- tidyTargetVars %>%
group_by(activityName) %>%
group_by(subjectID) %>%
summarise_each(funs(mean))
tidy
tidy <- tidyTargetVars %>%
group_by(activityName, subjectID) %>%
summarise_each(funs(mean))
tidy
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID & activityName) %>%
summarise_each(funs(mean))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(c(subjectID, activityName)) %>%
summarise_each(funs(mean))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" | "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" & "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" & "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" & "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" & "std"))
glimpse(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean" & "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), match("mean", "std"))
glimpse(tidy)
View(tidy)
tidy <- tidyTargetVars %>%
group_by(subjectID, activityName) %>%
summarise_each(funs(mean), matches("mean"), matches("std"))
glimpse(tidy)
View(tidy)
tidy <- dcast(tidyTargetVars, subjectID~tidyTargetVars, mean)
tidyMelt <- melt(tidyTargetVars, id=c(subjectID, activityName), measure.vars = c(tbodyacc-mean()-x:angle(z,gravitymean))
tidyMelt <- melt(tidyTargetVars, id=c(subjectID, activityName), measure.vars = c(tbodyacc-mean()-x:angle(z,gravitymean)))
head(tidyMelt, n=6)
tidy <- table(tidyTargetVars$subjectID, tidyTargetVars$activityName)
tidy
tidy <- table(tidyTargetVars$activityName, tidyTargetVars$subjectID)
tidy
View(tidy)
tidy <- table(tidyTargetVars$subjectID, tidyTargetVars$activityName)
View(tidy)
tidy
tidy2 <- dcast(tidyTargetVars, subjectID~activityName, mean)
tidy2
tidy2 <- dcast(tidyTargetVars, subjectID~activityName, mean, na.rm = TRUE)
tidy2
table(tidy2)
View(table(tidy2))
tidy <- table(tidyTargetVars$subjectID, tidyTargetVars$activityName)
View(tidy)
table(tidy2)
source('~/Desktop/Coursera_R/GetCleanDataCourseProject/run_analysis_rev.R')
# Revised run_anlaysis.R code for Getting and Cleaning Data Course Project, jw, dtd 60101
# Start by cleaning up the workspace
rm(list=ls())
ls()
# Next set the working directory
# setwd("~./Desktop/Coursera_R/GetCleanDataCourseProject")
# Load the following R packaqes
library(base)
library(curl)
library(plyr)
library(dplyr)
library(data.table)
library(httr)
library(knitr)
library(magrittr)
library(reshape2)
library(stringi)
library(stringr)
library(utils)
# Next give a handle to Url of the data source then download and open the assignment zip file from the local working directory
if (!file.exists("UCI HAR Dataset")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
zipfile="UCI HAR Dataset.zip"
download.file(fileUrl, destfile=zipfile, method = "curl")
# Get time stamp on dowload
dateDownLoaded <- date()
dateDownLoaded
# Next unzip the UCI HAR Dataset data files form the local working directory
unzip("UCI HAR Dataset.zip", exdir = ".")
list.files("UCI HAR Dataset")
}
ls()
# =====
# Read and assign a new variable name to each of the data sets below
trainXrawData <- read.table("./UCI HAR Dataset/train/X_train.txt", header = FALSE)
testXrawData <- read.table("./UCI HAR Dataset/test/X_test.txt", header = FALSE)
trainYrawID <- read.table("./UCI HAR Dataset/train/y_train.txt", header = FALSE)
testYrawID <- read.table("./UCI HAR Dataset/test/y_test.txt", header = FALSE)
trainSubjectRawID <- read.table("./UCI HAR Dataset/train/subject_train.txt", header = FALSE)
testSubjectRawID <- read.table("./UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activitiesRawID <- read.table("./UCI HAR Dataset/activity_labels.txt", header = FALSE)
featuresRawVarNames <- read.table("./UCI HAR Dataset/features.txt", header = FALSE)
ls()
# ==================================
# Next convert text strings of "featuresRawVarNames" to lower case
varNames <- featuresRawVarNames[, 2]
varNamesLowered <- tolower(varNames)
varLengthMax <- max(nchar(varNamesLowered))
str(varNamesLowered)
as.data.frame(varNamesLowered, nrow=1, ncol=561)
head(varNamesLowered)
# ==================================
# Add column headings or lables (varNamesLowered) to result merging xTrain & xTest
newX <- rbind(trainXrawData, testXrawData)
colnames(newX) <- varNamesLowered
head(newX)
head(newX)[, 100:175]
dim(newX)
# =================================
# Next add column names "ActivityID, "Activity to the activity data file
activitiesRawID
str(activitiesRawID)
names(activitiesRawID) <- c("activityID", "activityName")
activitiesRawID
yTrainTest <- rbind(trainYrawID, testYrawID)
head(yTrainTest)
names(yTrainTest) <- "activityID"
head(yTrainTest)
allActivities <- full_join(activitiesRawID, yTrainTest)
V3 <- tolower(allActivities[,2])
V3 <- gsub(".*_u", "walkingU", V3)
V3 <- gsub(".*_d", "walkingD", V3)
unique(V3)
allActivities <- cbind(allActivities, V3)
head(allActivities)
allActivities <- allActivities[, -2]
allActivities
names(allActivities) <- c("activityID", "activityName")
distinct(allActivities)
# GTG
#===================================
# Combine train and test subject raw data sets with rbind and assign to "allSubjects"
allSubjects <- rbind(trainSubjectRawID, testSubjectRawID)
head(allSubjects)
unique(allSubjects)
dim(unique(allSubjects))
# ==================================
# Next add column name "subjectID" to subject2
colnames(allSubjects) <- "subjectID"
allSubjects <- factor(allSubjects$subjectID)
head(allSubjects)
class(allSubjects)
str(allSubjects)
# ===================================
# Combine using cbind the complete subject and activity data
allSubjectsActivitiesData <- cbind(allSubjects, allActivities)
allSubjectsActivitiesData <- allSubjectsActivitiesData[-2,]
head(allSubjectsActivitiesData)
allSemiRawData <- cbind(allSubjectsActivitiesData, newX)
head(allSemiRawData, 10)[1:20]
str(allSemiRawData)
names(allSemiRawData)[1] <- "subjectID"
head(allSemiRawData)[,1:5]
# Check for "NA" values
any(is.na(allSemiRawData)) # no missing data in this data.frame
# GTG as of 60108, 1551hrs
# ====================================
# Initiate process of refinning the dataset
# Select only cloumns containing ID, Name, Mean & StdDev
# Create a vector of all variable names called colNamesVector
colNamesVector <- colnames(allSemiRawData)
colNamesVector
# Keeping SubjectID and ActivityName while removing (columns/variables) not containing either (mean or Std)
# GTG up to this point......
#
colNamesVector2 <- grep("(.*std.*)|(.*mean.*)|(^subjectID$)|(^activityName$)", colNamesVector)
colNamesVector2
# GTG up to this point
# str(colNamesVector2)
# head(colNamesVector2)
# colNamesVector2 <- c(1,2, colNamesVector)
targetVars <- allSemiRawData[, colNamesVector2]
head(targetVars)[1:10]
dim(targetVars)
# ===================================
# Then check to see if any duplicate columns/variables remain
tidyTargetVars <- targetVars[, !duplicated(colnames(targetVars))]
dim(tidyTargetVars) # no duplicates at this point
# GTG up to this point as of 60108, 1700hrs
# ====================================
library(dplyr)
tidy <- table(tidyTargetVars$subjectID, tidyTargetVars$activityName)
View(tidy)
tidy2 <- dcast(tidyTargetVars, subjectID~activityName, mean, na.rm = TRUE)
View(table(tidy2))
table(tidy2)
tidy2 <- dcast(tidyTargetVars, subjectID~activityName, mean, na.rm = TRUE)
tidyTargetVars$subjectID[1:10, 1:10]
newX
str(newX)
varNames <- featuresRawVarNames[, 2]
varNamesLowered <- tolower(varNames)
varLengthMax <- max(nchar(varNamesLowered))
str(varNamesLowered)
as.data.frame(varNamesLowered, nrow=1, ncol=561)
head(varNamesLowered)
newX <- rbind(trainXrawData, testXrawData)
colnames(newX) <- varNamesLowered
head(newX)
head(newX)[, 100:175]
dim(newX)
activitiesRawID
str(activitiesRawID)
names(activitiesRawID) <- c("activityID", "activityName")
activitiesRawID
yTrainTest <- rbind(trainYrawID, testYrawID)
head(yTrainTest)
names(yTrainTest) <- "activityID"
head(yTrainTest)
allActivities <- full_join(activitiesRawID, yTrainTest)
V3 <- tolower(allActivities[,2])
V3 <- gsub(".*_u", "walkingU", V3)
V3 <- gsub(".*_d", "walkingD", V3)
unique(V3)
allActivities <- cbind(allActivities, V3)
head(allActivities)
allActivities <- allActivities[, -2]
allActivities
names(allActivities) <- c("activityID", "activityName")
distinct(allActivities)
allSubjects <- rbind(trainSubjectRawID, testSubjectRawID)
head(allSubjects)
unique(allSubjects)
dim(unique(allSubjects))
colnames(allSubjects) <- "subjectID"
allSubjects <- factor(allSubjects$subjectID)
head(allSubjects)
class(allSubjects)
str(allSubjects)
allSubjectsActivitiesData <- cbind(allSubjects, allActivities)
allSubjectsActivitiesData <- allSubjectsActivitiesData[-2,]
head(allSubjectsActivitiesData)
allSemiRawData <- cbind(allSubjectsActivitiesData, newX)
head(allSemiRawData, 10)[1:20]
str(allSemiRawData)
names(allSemiRawData)[1] <- "subjectID"
head(allSemiRawData)[,1:5]
any(is.na(allSemiRawData)) # no missing data in this data.frame
colnames(allSubjects) <- "subjectID"
allSubjects <- factor(allSubjects$subjectID)
head(allSubjects)
class(allSubjects)
str(allSubjects)
allSubjectsActivitiesData <- cbind(allSubjects, allActivities)
allSubjectsActivitiesData <- allSubjectsActivitiesData[-2,]
head(allSubjectsActivitiesData)
allSemiRawData <- cbind(allSubjectsActivitiesData, newX)
head(allSemiRawData, 10)[1:20]
str(allSemiRawData)
names(allSemiRawData)[1] <- "subjectID"
head(allSemiRawData)[,1:5]
dim(allSubjectsActivitiesData)
dim(allSubjects)
head(allSubjects)
length(allSubjects)
length(allActivities)
activitiesRawID
activitiesRawID <- read.table("./UCI HAR Dataset/activity_labels.txt", header = FALSE)
activitiesRawID
yTrainTest <- rbind(trainYrawID, testYrawID)
head(yTrainTest)
names(yTrainTest) <- "activityID"
head(yTrainTest)
allActivities <- full_join(activitiesRawID, yTrainTest)
activitiesRawID
names(activitiesRawID$V1) <- "ID"
activitiesRawID
names(activitiesRawID$V1) <- "ID"
activitiesRawID
names(activitiesRawID)[,1] <- "ID"
names(activitiesRawID)[1] <- "ID"
activitiesRawID
yTrainTest <- rbind(trainYrawID, testYrawID)
head(yTrainTest)
names(yTrainTest)[1] <- "ID"
head(yTrainTest)
allActivities <- full_join(activitiesRawID, yTrainTest)
V3 <- tolower(allActivities[,2])
V3 <- gsub(".*_u", "walkingU", V3)
V3 <- gsub(".*_d", "walkingD", V3)
unique(V3)
allActivities <- cbind(allActivities, V3)
head(allActivities)
allActivities <- allActivities[, -2]
head(allActivities)
head(allActivities, 1500:1750)
head(allActivities, c(1500:1750)
head(allActivities, c(1500:1750))
head(allActivities)[1500:1750]
head(allActivities)[,1500:1750]
head(allActivities)[,C(1500:1750)]
head(allActivities)[1500:1750]
head(allActivities)[,1500:1750]
head(allActivities[ ,1500:1750])
allActivities[ ,1500:1750]
allActivities[ , 1500:1750]
allActivities[ , c(1500:1750)]
allActivities[1500:1750]
dim(activitiesRawID)
dim(yTrainTest)
allActivities <- join(activitiesRawID, yTrainTest)
V3 <- tolower(allActivities[,2])
V3 <- gsub(".*_u", "walkingU", V3)
V3 <- gsub(".*_d", "walkingD", V3)
unique(V3)
V3
allActivities
V3 <- tolower(allActivities[,2])
V3 <- gsub(".*_u", "walkingU", V3)
V3 <- gsub(".*_d", "walkingD", V3)
unique(V3)
V3
allActivities <- join(allActivities, V3)
